{"files": [{"path":"P:\\MAW1.1\\GED\\GoThroughFiles\\backend\\resources\\assets\\js\\app.js","content":"\r\n\/**\r\n * First we will load all of this project's JavaScript dependencies which\r\n * includes Vue and other libraries. It is a great starting point when\r\n * building robust, powerful web applications using Vue and Laravel.\r\n *\/\r\n\r\nrequire('.\/bootstrap');\r\n\r\nwindow.Vue = require('vue');\r\n\r\n\/**\r\n * Next, we will create a fresh Vue application instance and attach it to\r\n * the page. Then, you may begin adding components to this application\r\n * or customize the JavaScript scaffolding to fit your unique needs.\r\n *\/\r\n\r\nVue.component('example', require('.\/components\/Example.vue'));\r\n\r\nconst app = new Vue({\r\n    el: '#app'\r\n});\r\n"},{"path":"P:\\MAW1.1\\GED\\GoThroughFiles\\backend\\resources\\assets\\js\\bootstrap.js","content":"\r\nwindow._ = require('lodash');\r\n\r\n\/**\r\n * We'll load jQuery and the Bootstrap jQuery plugin which provides support\r\n * for JavaScript based Bootstrap features such as modals and tabs. This\r\n * code may be modified to fit the specific needs of your application.\r\n *\/\r\n\r\ntry {\r\n    window.$ = window.jQuery = require('jquery');\r\n\r\n    require('bootstrap-sass');\r\n} catch (e) {}\r\n\r\n\/**\r\n * We'll load the axios HTTP library which allows us to easily issue requests\r\n * to our Laravel back-end. This library automatically handles sending the\r\n * CSRF token as a header based on the value of the \"XSRF\" token cookie.\r\n *\/\r\n\r\nwindow.axios = require('axios');\r\n\r\nwindow.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\r\n\r\n\/**\r\n * Next we will register the CSRF Token as a common header with Axios so that\r\n * all outgoing HTTP requests automatically have it attached. This is just\r\n * a simple convenience so we don't have to attach every token manually.\r\n *\/\r\n\r\nlet token = document.head.querySelector('meta[name=\"csrf-token\"]');\r\n\r\nif (token) {\r\n    window.axios.defaults.headers.common['X-CSRF-TOKEN'] = token.content;\r\n} else {\r\n    console.error('CSRF token not found: https:\/\/laravel.com\/docs\/csrf#csrf-x-csrf-token');\r\n}\r\n\r\n\/**\r\n * Echo exposes an expressive API for subscribing to channels and listening\r\n * for events that are broadcast by Laravel. Echo and event broadcasting\r\n * allows your team to easily build robust real-time web applications.\r\n *\/\r\n\r\n\/\/ import Echo from 'laravel-echo'\r\n\r\n\/\/ window.Pusher = require('pusher-js');\r\n\r\n\/\/ window.Echo = new Echo({\r\n\/\/     broadcaster: 'pusher',\r\n\/\/     key: 'your-pusher-key'\r\n\/\/ });\r\n"},{"path":"P:\\MAW1.1\\GED\\GoThroughFiles\\backend\\resources\\lang\\en\\auth.php","content":"<?php\r\n\r\nreturn [\r\n\r\n    \/*\r\n    |--------------------------------------------------------------------------\r\n    | Authentication Language Lines\r\n    |--------------------------------------------------------------------------\r\n    |\r\n    | The following language lines are used during authentication for various\r\n    | messages that we need to display to the user. You are free to modify\r\n    | these language lines according to your application's requirements.\r\n    |\r\n    *\/\r\n\r\n    'failed' => 'These credentials do not match our records.',\r\n    'throttle' => 'Too many login attempts. Please try again in :seconds seconds.',\r\n\r\n];\r\n"},{"path":"P:\\MAW1.1\\GED\\GoThroughFiles\\backend\\resources\\lang\\en\\pagination.php","content":"<?php\r\n\r\nreturn [\r\n\r\n    \/*\r\n    |--------------------------------------------------------------------------\r\n    | Pagination Language Lines\r\n    |--------------------------------------------------------------------------\r\n    |\r\n    | The following language lines are used by the paginator library to build\r\n    | the simple pagination links. You are free to change them to anything\r\n    | you want to customize your views to better match your application.\r\n    |\r\n    *\/\r\n\r\n    'previous' => '&laquo; Previous',\r\n    'next' => 'Next &raquo;',\r\n\r\n];\r\n"},{"path":"P:\\MAW1.1\\GED\\GoThroughFiles\\backend\\resources\\lang\\en\\passwords.php","content":"<?php\r\n\r\nreturn [\r\n\r\n    \/*\r\n    |--------------------------------------------------------------------------\r\n    | Password Reset Language Lines\r\n    |--------------------------------------------------------------------------\r\n    |\r\n    | The following language lines are the default lines which match reasons\r\n    | that are given by the password broker for a password update attempt\r\n    | has failed, such as for an invalid token or invalid new password.\r\n    |\r\n    *\/\r\n\r\n    'password' => 'Passwords must be at least six characters and match the confirmation.',\r\n    'reset' => 'Your password has been reset!',\r\n    'sent' => 'We have e-mailed your password reset link!',\r\n    'token' => 'This password reset token is invalid.',\r\n    'user' => \"We can't find a user with that e-mail address.\",\r\n\r\n];\r\n"},{"path":"P:\\MAW1.1\\GED\\GoThroughFiles\\backend\\resources\\lang\\en\\validation.php","content":"<?php\r\n\r\nreturn [\r\n\r\n    \/*\r\n    |--------------------------------------------------------------------------\r\n    | Validation Language Lines\r\n    |--------------------------------------------------------------------------\r\n    |\r\n    | The following language lines contain the default error messages used by\r\n    | the validator class. Some of these rules have multiple versions such\r\n    | as the size rules. Feel free to tweak each of these messages here.\r\n    |\r\n    *\/\r\n\r\n    'accepted'             => 'The :attribute must be accepted.',\r\n    'active_url'           => 'The :attribute is not a valid URL.',\r\n    'after'                => 'The :attribute must be a date after :date.',\r\n    'after_or_equal'       => 'The :attribute must be a date after or equal to :date.',\r\n    'alpha'                => 'The :attribute may only contain letters.',\r\n    'alpha_dash'           => 'The :attribute may only contain letters, numbers, and dashes.',\r\n    'alpha_num'            => 'The :attribute may only contain letters and numbers.',\r\n    'array'                => 'The :attribute must be an array.',\r\n    'before'               => 'The :attribute must be a date before :date.',\r\n    'before_or_equal'      => 'The :attribute must be a date before or equal to :date.',\r\n    'between'              => [\r\n        'numeric' => 'The :attribute must be between :min and :max.',\r\n        'file'    => 'The :attribute must be between :min and :max kilobytes.',\r\n        'string'  => 'The :attribute must be between :min and :max characters.',\r\n        'array'   => 'The :attribute must have between :min and :max items.',\r\n    ],\r\n    'boolean'              => 'The :attribute field must be true or false.',\r\n    'confirmed'            => 'The :attribute confirmation does not match.',\r\n    'date'                 => 'The :attribute is not a valid date.',\r\n    'date_format'          => 'The :attribute does not match the format :format.',\r\n    'different'            => 'The :attribute and :other must be different.',\r\n    'digits'               => 'The :attribute must be :digits digits.',\r\n    'digits_between'       => 'The :attribute must be between :min and :max digits.',\r\n    'dimensions'           => 'The :attribute has invalid image dimensions.',\r\n    'distinct'             => 'The :attribute field has a duplicate value.',\r\n    'email'                => 'The :attribute must be a valid email address.',\r\n    'exists'               => 'The selected :attribute is invalid.',\r\n    'file'                 => 'The :attribute must be a file.',\r\n    'filled'               => 'The :attribute field must have a value.',\r\n    'image'                => 'The :attribute must be an image.',\r\n    'in'                   => 'The selected :attribute is invalid.',\r\n    'in_array'             => 'The :attribute field does not exist in :other.',\r\n    'integer'              => 'The :attribute must be an integer.',\r\n    'ip'                   => 'The :attribute must be a valid IP address.',\r\n    'ipv4'                 => 'The :attribute must be a valid IPv4 address.',\r\n    'ipv6'                 => 'The :attribute must be a valid IPv6 address.',\r\n    'json'                 => 'The :attribute must be a valid JSON string.',\r\n    'max'                  => [\r\n        'numeric' => 'The :attribute may not be greater than :max.',\r\n        'file'    => 'The :attribute may not be greater than :max kilobytes.',\r\n        'string'  => 'The :attribute may not be greater than :max characters.',\r\n        'array'   => 'The :attribute may not have more than :max items.',\r\n    ],\r\n    'mimes'                => 'The :attribute must be a file of type: :values.',\r\n    'mimetypes'            => 'The :attribute must be a file of type: :values.',\r\n    'min'                  => [\r\n        'numeric' => 'The :attribute must be at least :min.',\r\n        'file'    => 'The :attribute must be at least :min kilobytes.',\r\n        'string'  => 'The :attribute must be at least :min characters.',\r\n        'array'   => 'The :attribute must have at least :min items.',\r\n    ],\r\n    'not_in'               => 'The selected :attribute is invalid.',\r\n    'numeric'              => 'The :attribute must be a number.',\r\n    'present'              => 'The :attribute field must be present.',\r\n    'regex'                => 'The :attribute format is invalid.',\r\n    'required'             => 'The :attribute field is required.',\r\n    'required_if'          => 'The :attribute field is required when :other is :value.',\r\n    'required_unless'      => 'The :attribute field is required unless :other is in :values.',\r\n    'required_with'        => 'The :attribute field is required when :values is present.',\r\n    'required_with_all'    => 'The :attribute field is required when :values is present.',\r\n    'required_without'     => 'The :attribute field is required when :values is not present.',\r\n    'required_without_all' => 'The :attribute field is required when none of :values are present.',\r\n    'same'                 => 'The :attribute and :other must match.',\r\n    'size'                 => [\r\n        'numeric' => 'The :attribute must be :size.',\r\n        'file'    => 'The :attribute must be :size kilobytes.',\r\n        'string'  => 'The :attribute must be :size characters.',\r\n        'array'   => 'The :attribute must contain :size items.',\r\n    ],\r\n    'string'               => 'The :attribute must be a string.',\r\n    'timezone'             => 'The :attribute must be a valid zone.',\r\n    'unique'               => 'The :attribute has already been taken.',\r\n    'uploaded'             => 'The :attribute failed to upload.',\r\n    'url'                  => 'The :attribute format is invalid.',\r\n\r\n    \/*\r\n    |--------------------------------------------------------------------------\r\n    | Custom Validation Language Lines\r\n    |--------------------------------------------------------------------------\r\n    |\r\n    | Here you may specify custom validation messages for attributes using the\r\n    | convention \"attribute.rule\" to name the lines. This makes it quick to\r\n    | specify a specific custom language line for a given attribute rule.\r\n    |\r\n    *\/\r\n\r\n    'custom' => [\r\n        'attribute-name' => [\r\n            'rule-name' => 'custom-message',\r\n        ],\r\n    ],\r\n\r\n    \/*\r\n    |--------------------------------------------------------------------------\r\n    | Custom Validation Attributes\r\n    |--------------------------------------------------------------------------\r\n    |\r\n    | The following language lines are used to swap attribute place-holders\r\n    | with something more reader friendly such as E-Mail Address instead\r\n    | of \"email\". This simply helps us make messages a little cleaner.\r\n    |\r\n    *\/\r\n\r\n    'attributes' => [],\r\n\r\n];\r\n"},{"path":"P:\\MAW1.1\\GED\\GoThroughFiles\\backend\\resources\\views\\welcome.blade.php","content":"<!doctype html>\r\n<html lang=\"{{ app()->getLocale() }}\">\r\n    <head>\r\n        <meta charset=\"utf-8\">\r\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n\r\n        <title>Laravel<\/title>\r\n\r\n        <!-- Fonts -->\r\n        <link href=\"https:\/\/fonts.googleapis.com\/css?family=Raleway:100,600\" rel=\"stylesheet\" type=\"text\/css\">\r\n\r\n        <!-- Styles -->\r\n        <style>\r\n            html, body {\r\n                background-color: #fff;\r\n                color: #636b6f;\r\n                font-family: 'Raleway', sans-serif;\r\n                font-weight: 100;\r\n                height: 100vh;\r\n                margin: 0;\r\n            }\r\n\r\n            .full-height {\r\n                height: 100vh;\r\n            }\r\n\r\n            .flex-center {\r\n                align-items: center;\r\n                display: flex;\r\n                justify-content: center;\r\n            }\r\n\r\n            .position-ref {\r\n                position: relative;\r\n            }\r\n\r\n            .top-right {\r\n                position: absolute;\r\n                right: 10px;\r\n                top: 18px;\r\n            }\r\n\r\n            .content {\r\n                text-align: center;\r\n            }\r\n\r\n            .title {\r\n                font-size: 84px;\r\n            }\r\n\r\n            .links > a {\r\n                color: #636b6f;\r\n                padding: 0 25px;\r\n                font-size: 12px;\r\n                font-weight: 600;\r\n                letter-spacing: .1rem;\r\n                text-decoration: none;\r\n                text-transform: uppercase;\r\n            }\r\n\r\n            .m-b-md {\r\n                margin-bottom: 30px;\r\n            }\r\n        <\/style>\r\n    <\/head>\r\n    <body>\r\n        <div class=\"flex-center position-ref full-height\">\r\n            @if (Route::has('login'))\r\n                <div class=\"top-right links\">\r\n                    @if (Auth::check())\r\n                        <a href=\"{{ url('\/home') }}\">Home<\/a>\r\n                    @else\r\n                        <a href=\"{{ url('\/login') }}\">Login<\/a>\r\n                        <a href=\"{{ url('\/register') }}\">Register<\/a>\r\n                    @endif\r\n                <\/div>\r\n            @endif\r\n\r\n            <div class=\"content\">\r\n                <div class=\"title m-b-md\">\r\n                    Laravel\r\n                <\/div>\r\n\r\n                <div class=\"links\">\r\n                    <a href=\"https:\/\/laravel.com\/docs\">Documentation<\/a>\r\n                    <a href=\"https:\/\/laracasts.com\">Laracasts<\/a>\r\n                    <a href=\"https:\/\/laravel-news.com\">News<\/a>\r\n                    <a href=\"https:\/\/forge.laravel.com\">Forge<\/a>\r\n                    <a href=\"https:\/\/github.com\/laravel\/laravel\">GitHub<\/a>\r\n                <\/div>\r\n            <\/div>\r\n        <\/div>\r\n    <\/body>\r\n<\/html>\r\n"}]}
